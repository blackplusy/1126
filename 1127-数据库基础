1.常见的数据库
2.数据库的安装
3.数据库的表结构
	a.创建表结构
		语法:create table 表(
				列  数据类型,
				列  数据类型,
				...
			);
	b.修改表结构
		新增列
			语法:alter table 表 add 列 数据类型;
		修改列
			语法:alter table 表 modify 列 数据类型;
		删除列
			语法:alter table 表 drop column 列;
	c.删除表结构
		语法:drop table 表;
==============================================================
1.mysql数据的新增、修改、删除
	数值类型数据直接使用
	字符类型数据使用单引号
	日期类型数据使用单引号
	create table goods (
		name  char(10),   #商品名称
		price  int,       #商品售价
		ddate  date       #出厂日期
	);
	a.mysql的数据新增
		1>向表中指定列新增数据
			列的顺序和值的顺序一定要对应
			语法:insert into 表(列1,列2...) values(值1,值2...)
			需求:向goods表中新增数据商品名字，o8ma,售价250
				insert into goods(name,price) values('o8ma',250);
		2>向表中所有列新增数据		
			语法:insert into 表 values(值1,值2....);
			需求:向goods表中新增数据，商品名称，simida，价格119，出厂日期 2020-01-01
				insert into goods values('simida',119,'2020-01-01');
	b.mysql的数据修改
		语法:update 表 set 列=值 where 条件;
		如果不加where条件，默认修改的是整个列的数据
		如果增加where条件，修改的是满足条件的行的数据
		需求:修改goods表中名字是o8ma的价格为10000
		update goods set price=10000 where name='o8ma';
		需求:修改所有商品的价格为0
		update goods set price=0;
	c.mysql的数据删除
		delete    删除指定数据 删除数据可以找回 DML
		truncate  删除全表数据 删除数据无法找回 DDL  截断表(破坏了表中数据的结构)
		1>delete
			delete from 表 where 条件;
			需求:删除goods表中名字是o8ma的所有信息
			delete from goods where name='o8ma';
			需求:删除goods表中所有数据
			delete from goods;
		2>truncate
			truncate table 表;
			需求:删除goods表中所有数据
			truncate table goods;

2.数据的查询
	https://www.ecshop119.com/ecshopjc-853.html
	a.查询的分类
		简单查询
		多表查询
		子查询
		分组查询
	b.简单查询
		语法:select 列 from 表 where 条件;
		select 后面 from 前面是和列相关的
		where 条件是和行相关
		*代表所有的列
		1>查询所有数据
			需求:查询ecs_goods中所有信息
				select * from ecs_goods ;
		2>查询指定列的数据
			需求:查询ecs_goods表中所有商品名称和本店售价
				select goods_name,shop_price from ecs_goods;		
		3>查询指定行的数据
			需求:查询ecs_goods表中商品名称是KD876的所有信息
				select * from ecs_goods where goods_name='KD876';	
		4>查询指定行的列的数据
			需求:查询ecs_goods表中商品名称是KD876的本店售价
				select shop_price from ecs_goods where goods_name='KD876';
	c.where条件
		1>比较
			>
			<
			=
			>=
			<=
			!=
			<>  不等于
			需求:查询ecs_goods表中本店售价高于2000的所有商品名字和本店售价
				select goods_name,shop_price from ecs_goods where shop_price>2000;
			需求:查询ecs_goods表中商品名称不是KD876的所有信息
				select * from ecs_goods where goods_name<>'KD876';
		2>关系
			and   同时满足
			or    满足一个即可
			not   不满足条件
			需求:查询ecs_goods表中本店售价高于1000并且低于2000的所有信息
				select * from ecs_goods where shop_price>1000 and shop_price<2000;
			需求:查询ecs_goods表商品名称是kd876或者诺基亚的所有信息
				select * from ecs_goods where goods_name='kd876' or goods_name='诺基亚';
		3>区间
			between...and...
			小在前，大在后，包括两个端点
			需求:查询ecs_goods本店售价范围1388和1999之间的所有信息
				select * from ecs_goods where shop_price>=1388 and shop_price<=1999;
				select * from ecs_goods where shop_price between 1388 and 1999;
		4>空值
			空值没有任何数据类型，没有任何值，不能用于比较和运算
			查询时候使用is null或者is not null
			需求:查询ecs_goods中suppliers_id为空的所有信息
				select * from ecs_goods where suppliers_id is null;
		5>模糊
			当信息不完整时候使用，通常和字符类型一起使用
			like 模糊查询关键字
			_    一个字符
			%    任意个字符
			需求:查询ecs_goods商品名称是诺基亚开头的所有信息
				select * from ecs_goods where goods_name like '诺基亚%';
			需求:查询ecs_goods商品名称不是6结尾的所有信息
				select * from ecs_goods where goods_name not like '%6';
			需求:查询ecs_goods商品名称是6个字符的
				select * from ecs_goods where goods_name like '______';
		6>in
			或者的关系，在。。里面
			需求:查询ecs_goods表商品名称是kd876或者诺基亚的所有信息
			select * from ecs_goods where goods_name in ('kd876','诺基亚');




